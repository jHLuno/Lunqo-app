{"version":3,"file":"52.6b88cd4d99fa00182e30.chunk.js","mappings":"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","sources":["webpack://lunqo-app/./src/components/AnalyticsDemo.js"],"sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport { X, TrendingUp, Users, Eye, MousePointer } from 'lucide-react';\n\nconst AnalyticsDemo = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n    rootMargin: '50px',\n  });\n\n  // Memoized data to prevent unnecessary re-renders\n  const metrics = useMemo(() => [\n    { label: 'Total Impressions', value: '2.5M', change: '+12%', icon: Eye },\n    { label: 'Active Riders', value: '45K', change: '+8%', icon: Users },\n    { label: 'QR Scans', value: '18K', change: '+15%', icon: MousePointer },\n    { label: 'Revenue', value: '$125K', change: '+23%', icon: TrendingUp }\n  ], []);\n\n  const chartData = useMemo(() => [\n    { day: 'Mon', impressions: 350, scans: 120 },\n    { day: 'Tue', impressions: 420, scans: 150 },\n    { day: 'Wed', impressions: 380, scans: 135 },\n    { day: 'Thu', impressions: 450, scans: 180 },\n    { day: 'Fri', impressions: 520, scans: 220 },\n    { day: 'Sat', impressions: 480, scans: 200 },\n    { day: 'Sun', impressions: 390, scans: 160 }\n  ], []);\n\n  // Memoized animation variants for better performance\n  const sectionVariants = useMemo(() => ({\n    initial: { opacity: 0, y: 30 },\n    animate: { opacity: 1, y: 0 },\n    transition: { duration: 0.8, ease: \"easeOut\" }\n  }), []);\n\n  const dashboardVariants = useMemo(() => ({\n    initial: { opacity: 0, y: 50 },\n    animate: { opacity: 1, y: 0 },\n    transition: { delay: 0.2, duration: 0.8, ease: \"easeOut\" }\n  }), []);\n\n  const metricVariants = useMemo(() => ({\n    initial: { opacity: 0, scale: 0.8 },\n    animate: { opacity: 1, scale: 1 },\n    transition: { duration: 0.6, ease: \"easeOut\" }\n  }), []);\n\n  const modalVariants = useMemo(() => ({\n    initial: { opacity: 0 },\n    animate: { opacity: 1 },\n    exit: { opacity: 0 },\n    transition: { duration: 0.3, ease: \"easeInOut\" }\n  }), []);\n\n  const modalContentVariants = useMemo(() => ({\n    initial: { scale: 0.8, opacity: 0 },\n    animate: { scale: 1, opacity: 1 },\n    exit: { scale: 0.8, opacity: 0 },\n    transition: { duration: 0.3, ease: \"easeInOut\" }\n  }), []);\n\n  // Scroll locking functionality\n  useEffect(() => {\n    if (isModalOpen) {\n      // Store current scroll position\n      const scrollY = window.scrollY;\n      \n      // Lock scroll by setting body styles\n      document.body.style.position = 'fixed';\n      document.body.style.top = `-${scrollY}px`;\n      document.body.style.width = '100%';\n      document.body.style.overflow = 'hidden';\n      \n      // Cleanup function to restore scroll\n      return () => {\n        document.body.style.position = '';\n        document.body.style.top = '';\n        document.body.style.width = '';\n        document.body.style.overflow = '';\n        \n        // Restore scroll position\n        window.scrollTo(0, scrollY);\n      };\n    }\n  }, [isModalOpen]);\n\n  // Optimized event handlers\n  const handleModalOpen = useCallback(() => {\n    setIsModalOpen(true);\n  }, []);\n\n  const handleModalClose = useCallback(() => {\n    setIsModalOpen(false);\n  }, []);\n\n  const handleModalBackdropClick = useCallback((e) => {\n    if (e.target === e.currentTarget) {\n      setIsModalOpen(false);\n    }\n  }, []);\n\n  // Calculate chart heights once\n  const maxImpressions = Math.max(...chartData.map(d => d.impressions));\n  const maxScans = Math.max(...chartData.map(d => d.scans));\n\n  return (\n    <section id=\"analytics\" className=\"section-padding bg-dark-800/8\">\n      <div className=\"container-custom\">\n        {/* Section Header */}\n        <motion.div\n          variants={sectionVariants}\n          initial=\"initial\"\n          animate={inView ? \"animate\" : \"initial\"}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-6\">\n            Real-Time\n            <span className=\"gradient-text\"> Analytics</span>\n          </h2>\n          <p className=\"text-lg text-dark-300 max-w-3xl mx-auto\">\n            Monitor your campaigns with live data, track performance metrics, and optimize for maximum engagement.\n          </p>\n        </motion.div>\n\n        {/* Dashboard Preview */}\n        <motion.div\n          ref={ref}\n          variants={dashboardVariants}\n          initial=\"initial\"\n          animate={inView ? \"animate\" : \"initial\"}\n          className=\"relative\"\n        >\n          <div className=\"card p-8 cursor-pointer group gpu-accelerated\" onClick={handleModalOpen}>\n            {/* Dashboard Header */}\n            <div className=\"flex items-center justify-between mb-8\">\n              <div>\n                <h3 className=\"text-2xl font-bold text-white mb-2\">Campaign Overview</h3>\n                <p className=\"text-dark-300\">Last 7 days performance</p>\n              </div>\n              <div className=\"flex items-center space-x-2 text-primary-lime\">\n                <div className=\"w-2 h-2 bg-primary-lime rounded-full animate-pulse\" />\n                <span className=\"text-sm font-medium\">Live</span>\n              </div>\n            </div>\n\n            {/* Metrics Grid */}\n            <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n              {metrics.map((metric, index) => (\n                <motion.div\n                  key={metric.label}\n                  variants={metricVariants}\n                  initial=\"initial\"\n                  animate={inView ? \"animate\" : \"initial\"}\n                  transition={{ delay: 0.4 + index * 0.1, duration: 0.6, ease: \"easeOut\" }}\n                  className=\"bg-dark-800/50 rounded-xl p-4 border border-dark-700 gpu-accelerated\"\n                >\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <metric.icon className=\"w-5 h-5 text-primary-blue\" />\n                    <span className=\"text-xs text-primary-lime font-medium\">{metric.change}</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-white mb-1\">{metric.value}</div>\n                  <div className=\"text-sm text-dark-400\">{metric.label}</div>\n                </motion.div>\n              ))}\n            </div>\n\n            {/* Chart Preview */}\n            <div className=\"bg-dark-800/30 rounded-xl p-6 border border-dark-700 gpu-accelerated\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h4 className=\"text-lg font-semibold text-white\">Engagement Trends</h4>\n                <div className=\"flex items-center space-x-4 text-sm\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-3 h-3 bg-primary-blue rounded-full\" />\n                    <span className=\"text-dark-300\">Impressions</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-3 h-3 bg-primary-lime rounded-full\" />\n                    <span className=\"text-dark-300\">QR Scans</span>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Simple Chart Bars */}\n              <div className=\"flex items-end justify-between h-32 space-x-2\">\n                {chartData.map((data, index) => (\n                  <div key={data.day} className=\"flex flex-col items-center space-y-2\">\n                    <div className=\"flex items-end space-x-1\">\n                      <div \n                        className=\"w-4 bg-primary-blue rounded-t gpu-accelerated\"\n                        style={{ \n                          height: `${(data.impressions / maxImpressions) * 80}px`,\n                          transform: 'translateZ(0)'\n                        }}\n                      />\n                      <div \n                        className=\"w-4 bg-primary-lime rounded-t gpu-accelerated\"\n                        style={{ \n                          height: `${(data.scans / maxScans) * 80}px`,\n                          transform: 'translateZ(0)'\n                        }}\n                      />\n                    </div>\n                    <span className=\"text-xs text-dark-400\">{data.day}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Click to Expand Hint */}\n            <div className=\"absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300 gpu-accelerated\">\n              <div className=\"bg-primary-blue/20 text-primary-blue text-xs px-2 py-1 rounded-full\">\n                Click to expand\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Modal */}\n        <AnimatePresence>\n          {isModalOpen && (\n            <motion.div\n              variants={modalVariants}\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              className=\"fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4 gpu-accelerated\"\n              onClick={handleModalBackdropClick}\n            >\n              <motion.div\n                variants={modalContentVariants}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                className=\"bg-dark-800 rounded-3xl p-8 max-w-4xl w-full max-h-[90vh] overflow-y-auto gpu-accelerated\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-2xl font-bold text-white\">Full Analytics Dashboard</h3>\n                  <button\n                    onClick={handleModalClose}\n                    className=\"text-dark-400 hover:text-white transition-colors gpu-accelerated\"\n                    aria-label=\"Close modal\"\n                  >\n                    <X size={24} />\n                  </button>\n                </div>\n                \n                <div className=\"space-y-6\">\n                  {/* Enhanced Metrics */}\n                  <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\n                    {metrics.map((metric) => (\n                      <div key={metric.label} className=\"bg-dark-900/50 rounded-xl p-4 border border-dark-700 gpu-accelerated\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <metric.icon className=\"w-5 h-5 text-primary-blue\" />\n                          <span className=\"text-xs text-primary-lime font-medium\">{metric.change}</span>\n                        </div>\n                        <div className=\"text-2xl font-bold text-white mb-1\">{metric.value}</div>\n                        <div className=\"text-sm text-dark-400\">{metric.label}</div>\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Enhanced Chart */}\n                  <div className=\"bg-dark-900/30 rounded-xl p-6 border border-dark-700 gpu-accelerated\">\n                    <h4 className=\"text-lg font-semibold text-white mb-4\">Detailed Performance Analytics</h4>\n                    <div className=\"h-64 flex items-end justify-between space-x-2\">\n                      {chartData.map((data) => (\n                        <div key={data.day} className=\"flex flex-col items-center space-y-2 flex-1\">\n                          <div className=\"flex items-end space-x-1 w-full\">\n                            <div \n                              className=\"bg-primary-blue rounded-t flex-1 gpu-accelerated\"\n                              style={{ \n                                height: `${(data.impressions / maxImpressions) * 200}px`,\n                                transform: 'translateZ(0)'\n                              }}\n                            />\n                            <div \n                              className=\"bg-primary-lime rounded-t flex-1 gpu-accelerated\"\n                              style={{ \n                                height: `${(data.scans / maxScans) * 200}px`,\n                                transform: 'translateZ(0)'\n                              }}\n                            />\n                          </div>\n                          <span className=\"text-xs text-dark-400\">{data.day}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"text-center\">\n                    <p className=\"text-dark-300 mb-4\">\n                      This is a preview of our analytics dashboard. Get full access with real-time data when you sign up.\n                    </p>\n                    <motion.button\n                      className=\"btn-primary gpu-accelerated\"\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                      transition={{ duration: 0.15, ease: \"easeInOut\" }}\n                    >\n                      Get Full Access\n                    </motion.button>\n                  </div>\n                </div>\n              </motion.div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(AnalyticsDemo); "],"names":["AnalyticsDemo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useInView","useInView","triggerOnce","threshold","rootMargin","_useInView2","ref","inView","metrics","useMemo","label","value","change","icon","Eye","Users","MousePointer","TrendingUp","chartData","day","impressions","scans","sectionVariants","initial","opacity","y","animate","transition","duration","ease","dashboardVariants","delay","metricVariants","scale","modalVariants","exit","modalContentVariants","useEffect","scrollY","window","document","body","style","position","top","concat","width","overflow","scrollTo","handleModalOpen","useCallback","handleModalClose","handleModalBackdropClick","e","target","currentTarget","maxImpressions","Math","max","apply","_toConsumableArray","map","d","maxScans","React","id","className","motion","div","variants","onClick","metric","index","key","data","height","transform","AnimatePresence","stopPropagation","X","size","button","whileHover","whileTap"],"sourceRoot":""}
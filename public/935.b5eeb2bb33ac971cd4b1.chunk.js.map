{"version":3,"file":"935.b5eeb2bb33ac971cd4b1.chunk.js","mappings":"+OAKMA,EAAgB,WACpB,IAAAC,GAAsBC,EAAAA,EAAAA,IAAU,CAC9BC,aAAa,EACbC,UAAW,GACXC,WAAY,SACZC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAJKO,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAOZI,GAAYC,EAAAA,EAAAA,SAAQ,iBAAM,CAC9B,CACEC,KAAMC,EAAAA,EACNC,MAAO,eACPC,QAAS,+BACTC,MAAO,gBAET,CACEJ,KAAMK,EAAAA,EACNH,MAAO,cACPC,QAAS,0BACTC,MAAO,gBAET,CACEJ,KAAMM,EAAAA,EACNJ,MAAO,WACPC,QAAS,+BACTC,MAAO,kBAET,CACEJ,KAAMO,EAAAA,EACNL,MAAO,YACPC,QAAS,iCACTC,MAAO,gBAEV,EAAE,IAGGI,GAAoBT,EAAAA,EAAAA,SAAQ,iBAAO,CACvCU,OAAQ,CAAEC,QAAS,GACnBC,QAAS,CACPD,QAAS,EACTE,WAAY,CACVC,gBAAiB,GACjBC,cAAe,KAGpB,EAAG,IAEEC,GAAehB,EAAAA,EAAAA,SAAQ,iBAAO,CAClCU,OAAQ,CAAEC,QAAS,EAAGM,EAAG,IACzBL,QAAS,CACPD,QAAS,EACTM,EAAG,EACHJ,WAAY,CACVK,SAAU,GACVC,KAAM,YAGX,EAAG,IASEC,IAPepB,EAAAA,EAAAA,SAAQ,iBAAO,CAClCqB,WAAY,CACVJ,GAAI,EACJJ,WAAY,CAAEK,SAAU,GAAKC,KAAM,cAEtC,EAAG,KAEiBnB,EAAAA,EAAAA,SAAQ,iBAAO,CAClCqB,WAAY,CACVC,MAAO,IACPC,OAAQ,EACRV,WAAY,CAAEK,SAAU,GAAKC,KAAM,cAEtC,EAAG,KAEJ,OACEK,EAAAA,cAAA,WAASC,UAAU,kCACjBD,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAACE,EAAAA,EAAOC,IAAG,CACT9B,IAAKA,EACL+B,SAAUnB,EACVoB,QAAQ,SACRC,QAAShC,EAAS,UAAY,SAC9B2B,UAAU,wDAET1B,EAAUgC,IAAI,SAACC,EAAUC,GAAK,OAC7BT,EAAAA,cAACE,EAAAA,EAAOC,IAAG,CACTO,IAAKF,EAAS7B,MACdyB,SAAUZ,EACVS,UAAU,4CACVJ,WAAY,CACVJ,GAAI,EACJJ,WAAY,CAAEK,SAAU,GAAKC,KAAM,eAGrCK,EAAAA,cAAA,OAAKC,UAAU,oDACbD,EAAAA,cAACE,EAAAA,EAAOC,IAAG,CACTF,UAAS,4BAAAU,OAA8BH,EAAS3B,MAAK,sBAAA8B,OAAqBH,EAAS3B,MAAK,wDAAA8B,OAAuDH,EAAS3B,MAAK,2BAAA8B,OAA0BH,EAAS3B,MAAK,mDACrMuB,SAAUR,EACVC,WAAW,cAEXG,EAAAA,cAACQ,EAAS/B,KAAI,CACZwB,UAAS,gBAAAU,OAAkBH,EAAS3B,UAIxCmB,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIC,UAAU,yCACXO,EAAS7B,OAEZqB,EAAAA,cAAA,KAAGC,UAAU,yCACVO,EAAS5B,WAIL,KAMzB,EAEA,QAAeoB,EAAAA,KAAWnC,E","sources":["webpack://lunqo-app/./src/components/AudienceStrip.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport { Car, Building2, Users, TrendingUp } from 'lucide-react';\n\nconst AudienceStrip = () => {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.1,\n    rootMargin: '50px',\n  });\n\n  // Memoized audiences data\n  const audiences = useMemo(() => [\n    {\n      icon: Car,\n      title: 'Fleet Owners',\n      benefit: 'Maximize revenue per vehicle',\n      color: 'primary-blue'\n    },\n    {\n      icon: Building2,\n      title: 'Advertisers',\n      benefit: 'Reach captive audiences',\n      color: 'primary-lime'\n    },\n    {\n      icon: Users,\n      title: 'Agencies',\n      benefit: 'Scale campaigns effortlessly',\n      color: 'primary-orange'\n    },\n    {\n      icon: TrendingUp,\n      title: 'Investors',\n      benefit: 'High-growth adtech opportunity',\n      color: 'primary-blue'\n    }\n  ], []);\n\n  // Memoized animation variants\n  const containerVariants = useMemo(() => ({\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  }), []);\n\n  const itemVariants = useMemo(() => ({\n    hidden: { opacity: 0, y: 30 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.6,\n        ease: \"easeOut\"\n      }\n    }\n  }), []);\n\n  const cardVariants = useMemo(() => ({\n    whileHover: { \n      y: -8,\n      transition: { duration: 0.3, ease: \"easeInOut\" }\n    }\n  }), []);\n\n  const iconVariants = useMemo(() => ({\n    whileHover: { \n      scale: 1.1,\n      rotate: 5,\n      transition: { duration: 0.3, ease: \"easeInOut\" }\n    }\n  }), []);\n\n  return (\n    <section className=\"section-padding bg-dark-800/20\">\n      <div className=\"container-custom\">\n        <motion.div\n          ref={ref}\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={inView ? \"visible\" : \"hidden\"}\n          className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\"\n        >\n          {audiences.map((audience, index) => (\n            <motion.div\n              key={audience.title}\n              variants={itemVariants}\n              className=\"card group cursor-pointer gpu-accelerated\"\n              whileHover={{ \n                y: -8,\n                transition: { duration: 0.3, ease: \"easeInOut\" }\n              }}\n            >\n              <div className=\"flex flex-col items-center text-center space-y-4\">\n                <motion.div\n                  className={`w-16 h-16 rounded-2xl bg-${audience.color}/10 border border-${audience.color}/20 flex items-center justify-center group-hover:bg-${audience.color}/20 group-hover:border-${audience.color}/40 transition-all duration-300 gpu-accelerated`}\n                  variants={iconVariants}\n                  whileHover=\"whileHover\"\n                >\n                  <audience.icon \n                    className={`w-8 h-8 text-${audience.color}`} \n                  />\n                </motion.div>\n                \n                <div>\n                  <h3 className=\"text-lg font-semibold text-white mb-2\">\n                    {audience.title}\n                  </h3>\n                  <p className=\"text-sm text-dark-300 leading-relaxed\">\n                    {audience.benefit}\n                  </p>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(AudienceStrip); "],"names":["AudienceStrip","_useInView","useInView","triggerOnce","threshold","rootMargin","_useInView2","_slicedToArray","ref","inView","audiences","useMemo","icon","Car","title","benefit","color","Building2","Users","TrendingUp","containerVariants","hidden","opacity","visible","transition","staggerChildren","delayChildren","itemVariants","y","duration","ease","iconVariants","whileHover","scale","rotate","React","className","motion","div","variants","initial","animate","map","audience","index","key","concat"],"sourceRoot":""}